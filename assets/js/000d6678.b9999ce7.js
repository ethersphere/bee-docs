"use strict";(self.webpackChunkbee_docs=self.webpackChunkbee_docs||[]).push([[714],{95399:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>g,frontMatter:()=>r,metadata:()=>t,toc:()=>a});var i=s(74848),l=s(28453);const r={},o="Logging in Bee",t={id:"bee/working-with-bee/logs-and-files",title:"Logging in Bee",description:"This section provides an overview of logging in Bee, including log locations, exporting logs, managing verbosity levels, and using fine-grained control for specific loggers.",source:"@site/docs/bee/working-with-bee/logs-and-files.md",sourceDirName:"bee/working-with-bee",slug:"/bee/working-with-bee/logs-and-files",permalink:"/docs/bee/working-with-bee/logs-and-files",draft:!1,unlisted:!1,editUrl:"https://github.com/ethersphere/docs.github.io/blob/master/docs/bee/working-with-bee/logs-and-files.md",tags:[],version:"current",frontMatter:{},sidebar:"bee",previous:{title:"Bee API",permalink:"/docs/bee/working-with-bee/bee-api"},next:{title:"Bee Dashboard",permalink:"/docs/bee/working-with-bee/bee-dashboard"}},d={},a=[{value:"Log Locations",id:"log-locations",level:2},{value:"<strong>Linux (Package Manager Installation)</strong>",id:"linux-package-manager-installation",level:3},{value:"<strong>macOS (Homebrew Installation)</strong>",id:"macos-homebrew-installation",level:3},{value:"<strong>Docker</strong>",id:"docker",level:3},{value:"<strong>Shell Script</strong>",id:"shell-script",level:3},{value:"Logging Levels",id:"logging-levels",level:2},{value:"Behavior of Log Levels",id:"behavior-of-log-levels",level:3},{value:"Setting Verbosity",id:"setting-verbosity",level:2},{value:"<strong>YAML Config File</strong>",id:"yaml-config-file",level:3},{value:"<strong>Command Line Flag</strong>",id:"command-line-flag",level:3},{value:"<strong>Environment Variable</strong>",id:"environment-variable",level:3},{value:"Fine-Grained Logging Control",id:"fine-grained-logging-control",level:2},{value:"<strong>1. Retrieving Loggers List</strong>",id:"1-retrieving-loggers-list",level:3},{value:"<strong>2. Adjusting Logger Verbosity</strong>",id:"2-adjusting-logger-verbosity",level:3},{value:"Log Level Behavior Note",id:"log-level-behavior-note",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"logging-in-bee",children:"Logging in Bee"})}),"\n",(0,i.jsx)(n.p,{children:"This section provides an overview of logging in Bee, including log locations, exporting logs, managing verbosity levels, and using fine-grained control for specific loggers."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Bee uses a structured logging format compatible with popular tools such as ",(0,i.jsx)(n.a,{href:"https://grafana.com/",children:"Grafana"})," and ",(0,i.jsx)(n.a,{href:"https://www.elastic.co/elasticsearch",children:"Elasticsearch"}),". Structured logging helps streamline log analysis and management by organizing data into machine-readable formats which enable easy integration with monitoring and debugging tools."]})}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["Bee logs can be verbose by default, potentially consuming significant disk space over time. Consider implementing ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Log_rotation",children:"log rotation"})," to prevent excessive disk utilization."]})]}),"\n",(0,i.jsx)(n.h2,{id:"log-locations",children:"Log Locations"}),"\n",(0,i.jsx)(n.h3,{id:"linux-package-manager-installation",children:(0,i.jsx)(n.strong,{children:"Linux (Package Manager Installation)"})}),"\n",(0,i.jsxs)(n.p,{children:["When installed via a package manager (e.g., ",(0,i.jsx)(n.code,{children:"APT"}),", ",(0,i.jsx)(n.code,{children:"RPM"}),"), Bee runs as a ",(0,i.jsx)(n.strong,{children:"systemd service"}),", and logs are managed by the system journal, ",(0,i.jsx)(n.strong,{children:"journalctl"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"View logs using:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"journalctl --lines=100 --follow --unit bee\n"})}),"\n",(0,i.jsx)(n.p,{children:"Export all logs as JSON:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"journalctl --unit bee --output=json > bee-logs.json\n"})}),"\n",(0,i.jsx)(n.p,{children:"Export logs for a specific time range:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'journalctl --since "1 hour ago" --output=json --unit bee > bee-logs.json\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Learn more about ",(0,i.jsx)(n.code,{children:"journalctl"})," usage and filtering logs in this ",(0,i.jsx)(n.a,{href:"https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs",children:"tutorial"})," from DigitalOcean."]}),"\n",(0,i.jsx)(n.h3,{id:"macos-homebrew-installation",children:(0,i.jsx)(n.strong,{children:"macOS (Homebrew Installation)"})}),"\n",(0,i.jsx)(n.p,{children:"For a Homebrew installation on macOS, logs are saved to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"/usr/local/var/log/swarm-bee/bee.log\n"})}),"\n",(0,i.jsx)(n.p,{children:"View logs in real time:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"tail -f /usr/local/var/log/swarm-bee/bee.log\n"})}),"\n",(0,i.jsx)(n.h3,{id:"docker",children:(0,i.jsx)(n.strong,{children:"Docker"})}),"\n",(0,i.jsxs)(n.p,{children:["Docker saves ",(0,i.jsx)(n.strong,{children:"stdout"})," and ",(0,i.jsx)(n.strong,{children:"stderr"})," output as JSON files by default. The logs are stored under:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"/var/lib/docker/containers/<container-id>/<container-id>-json.log\n"})}),"\n",(0,i.jsx)(n.p,{children:"View logs in real time:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker logs -f <container-name>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Export logs to a file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"docker logs <container-name> > bee-logs.json\n"})}),"\n",(0,i.jsx)(n.p,{children:"Export logs for a specific time range:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'docker logs --since "30m" <container-name> > bee-logs.json\n'})}),"\n",(0,i.jsxs)(n.p,{children:["See ",(0,i.jsx)(n.a,{href:"https://docs.docker.com/reference/cli/docker/container/logs/",children:"Docker documentation"})," for additional options."]}),"\n",(0,i.jsx)(n.h3,{id:"shell-script",children:(0,i.jsx)(n.strong,{children:"Shell Script"})}),"\n",(0,i.jsxs)(n.p,{children:["For a shell script-installed Bee started using ",(0,i.jsx)(n.code,{children:"bee start"}),", logs are sent to ",(0,i.jsx)(n.strong,{children:"stdout"})," and ",(0,i.jsx)(n.strong,{children:"stderr"})," by default, which means they will appear in the terminal. They are ",(0,i.jsx)(n.strong,{children:"not saved to disk by default"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["To save logs to a file, redirect ",(0,i.jsx)(n.strong,{children:"stdout"})," and ",(0,i.jsx)(n.strong,{children:"stderr"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bee start --password <password> > bee.log 2>&1 &\n"})}),"\n",(0,i.jsx)(n.p,{children:"View recent logs and follow for updates:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"tail -f bee.log\n"})}),"\n",(0,i.jsx)(n.h2,{id:"logging-levels",children:"Logging Levels"}),"\n",(0,i.jsx)(n.p,{children:"Bee supports the following log levels:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Level"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"0=silent"})}),(0,i.jsx)(n.td,{children:"No logs."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"1=error"})}),(0,i.jsx)(n.td,{children:"Critical errors only."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"2=warn"})}),(0,i.jsx)(n.td,{children:"Warnings and errors."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"3=info"})}),(0,i.jsx)(n.td,{children:"General operational logs (default)."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"4=debug"})}),(0,i.jsx)(n.td,{children:"Detailed diagnostic logs."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"5=trace"})}),(0,i.jsx)(n.td,{children:"Highly granular logs for debugging."})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"behavior-of-log-levels",children:"Behavior of Log Levels"}),"\n",(0,i.jsxs)(n.p,{children:["Log levels are cumulative: setting a higher verbosity includes all lower levels.",(0,i.jsx)(n.br,{}),"\n","For example, ",(0,i.jsx)(n.code,{children:"debug"})," will output logs at ",(0,i.jsx)(n.code,{children:"debug"}),", ",(0,i.jsx)(n.code,{children:"info"}),", ",(0,i.jsx)(n.code,{children:"warn"}),", and ",(0,i.jsx)(n.code,{children:"error"})," levels."]}),"\n",(0,i.jsx)(n.h2,{id:"setting-verbosity",children:"Setting Verbosity"}),"\n",(0,i.jsxs)(n.p,{children:["The general verbosity level can be set using the ",(0,i.jsx)(n.code,{children:"verbosity"})," configuration option in order to display all log messages up to the selected level of verbosity."]}),"\n",(0,i.jsx)(n.h3,{id:"yaml-config-file",children:(0,i.jsx)(n.strong,{children:"YAML Config File"})}),"\n",(0,i.jsxs)(n.p,{children:["Set the ",(0,i.jsx)(n.code,{children:"verbosity"})," parameter in ",(0,i.jsx)(n.code,{children:"config.yaml"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"# Log verbosity: 0=silent, 1=error, 2=warn, 3=info, 4=debug, 5=trace\nverbosity: debug\n"})}),"\n",(0,i.jsx)(n.h3,{id:"command-line-flag",children:(0,i.jsx)(n.strong,{children:"Command Line Flag"})}),"\n",(0,i.jsx)(n.p,{children:"Specify verbosity when starting Bee:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"bee start --verbosity debug\n"})}),"\n",(0,i.jsx)(n.h3,{id:"environment-variable",children:(0,i.jsx)(n.strong,{children:"Environment Variable"})}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.code,{children:"BEE_VERBOSITY"})," before starting Bee:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"export BEE_VERBOSITY=debug\nbee start\n"})}),"\n",(0,i.jsx)(n.h2,{id:"fine-grained-logging-control",children:"Fine-Grained Logging Control"}),"\n",(0,i.jsxs)(n.p,{children:["Bee allows fine-grained control of logging levels for specific subsystems using the ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"/loggers"})," API endpoint"]}),". This enables adjustments without restarting the node."]}),"\n",(0,i.jsx)(n.h3,{id:"1-retrieving-loggers-list",children:(0,i.jsx)(n.strong,{children:"1. Retrieving Loggers List"})}),"\n",(0,i.jsx)(n.p,{children:"Retrieve the list of active loggers and their verbosity levels:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:1633/loggers | jq\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The list of loggers includes detailed entries for each subsystem. Below is an example for the ",(0,i.jsx)(n.code,{children:"node/api"})," logger:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "logger": "node/api",\n  "verbosity": "info",\n  "subsystem": "node/api[0][]>>824634474528",\n  "id": "bm9kZS9hcGlbMF1bXT4-ODI0NjM0NDc0NTI4"\n}\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"id"})}),": The Base64-encoded identifier used to adjust the logger\u2019s verbosity."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"verbosity"})}),": The current log level."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-adjusting-logger-verbosity",children:(0,i.jsx)(n.strong,{children:"2. Adjusting Logger Verbosity"})}),"\n",(0,i.jsx)(n.p,{children:"You can dynamically adjust the log level for any logger without restarting Bee."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Syntax"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X PUT http://localhost:1633/loggers/<id>/<verbosity>\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"<id>"})}),": The Base64-encoded logger name retrieved from ",(0,i.jsx)(n.code,{children:"/loggers"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"<verbosity>"})}),": Desired log level (",(0,i.jsx)(n.code,{children:"none"}),", ",(0,i.jsx)(n.code,{children:"error"}),", ",(0,i.jsx)(n.code,{children:"warn"}),", ",(0,i.jsx)(n.code,{children:"info"}),", ",(0,i.jsx)(n.code,{children:"debug"}),", ",(0,i.jsx)(n.code,{children:"trace"}),")."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example"}),": Set ",(0,i.jsx)(n.code,{children:"node/api"})," to ",(0,i.jsx)(n.code,{children:"debug"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X PUT http://localhost:1633/loggers/bm9kZS9hcGlbMF1bXT4-ODI0NjM0NDc0NTI4/debug\n"})}),"\n",(0,i.jsx)(n.h3,{id:"log-level-behavior-note",children:"Log Level Behavior Note"}),"\n",(0,i.jsx)(n.p,{children:"Log levels are cumulative. When a logger is set to a specific level, it will include all log messages at that level and below."}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Setting a logger to ",(0,i.jsx)(n.code,{children:"info"})," will show logs at ",(0,i.jsx)(n.code,{children:"info"}),", ",(0,i.jsx)(n.code,{children:"warn"}),", and ",(0,i.jsx)(n.code,{children:"error"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Logs at higher levels (",(0,i.jsx)(n.code,{children:"debug"})," and ",(0,i.jsx)(n.code,{children:"trace"}),") will ",(0,i.jsx)(n.strong,{children:"not"})," be displayed."]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>t});var i=s(96540);const l={},r=i.createContext(l);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);