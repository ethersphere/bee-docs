"use strict";(self.webpackChunkbee_docs=self.webpackChunkbee_docs||[]).push([[9381],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var o=s(96540);const l={},t=o.createContext(l);function a(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),o.createElement(t.Provider,{value:n},e.children)}},65895:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"develop/access-the-swarm/upload-and-download","title":"Upload & Download","description":"Uploading to Swarm has two steps: (1) buy storage as a postage stamp batch with a unique batch ID\u2014and (2) upload using the batch ID. The upload returns a Swarm reference hash, anyone with that reference can download the content.","source":"@site/docs/develop/access-the-swarm/upload-and-download.md","sourceDirName":"develop/access-the-swarm","slug":"/develop/access-the-swarm/upload-and-download","permalink":"/docs/develop/access-the-swarm/upload-and-download","draft":false,"unlisted":false,"editUrl":"https://github.com/ethersphere/docs.github.io/blob/master/docs/develop/access-the-swarm/upload-and-download.md","tags":[],"version":"current","frontMatter":{"title":"Upload & Download","id":"upload-and-download"},"sidebar":"develop","previous":{"title":"Introduction","permalink":"/docs/develop/access-the-swarm/introduction"},"next":{"title":"Host a Webpage","permalink":"/docs/develop/access-the-swarm/host-your-website"}}');var l=s(74848),t=s(28453);const a={title:"Upload & Download",id:"upload-and-download"},i=void 0,r={},d=[{value:"Upload &amp; Download with bee-js",id:"upload--download-with-bee-js",level:2},{value:"Single file \u2014 Node.js",id:"single-file--nodejs",level:3},{value:"Single file \u2014 Browser",id:"single-file--browser",level:3},{value:"Multiple files \u2014 Browser",id:"multiple-files--browser",level:3},{value:"Multiple files \u2014 Node.js",id:"multiple-files--nodejs",level:3},{value:"Upload &amp; Download with Swarm CLI",id:"upload--download-with-swarm-cli",level:2},{value:"Upload &amp; Download with the Bee API (advanced)",id:"upload--download-with-the-bee-api-advanced",level:2},{value:"Upload with <strong>/bzz</strong>",id:"upload-with-bzz",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["Uploading to Swarm has two steps: (1) ",(0,l.jsx)(n.strong,{children:"buy storage"})," as a ",(0,l.jsx)(n.strong,{children:"postage stamp batch"})," with a unique ",(0,l.jsx)(n.strong,{children:"batch ID"}),"\u2014and (2) ",(0,l.jsx)(n.strong,{children:"upload using the batch ID"}),". The upload returns a ",(0,l.jsx)(n.strong,{children:"Swarm reference hash"}),", anyone with that reference can download the content."]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Before you begin:"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["You need a running Bee node connected to Gnosis Chain and funded with ",(0,l.jsx)(n.strong,{children:"xBZZ"})," and ",(0,l.jsx)(n.strong,{children:"xDAI"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Uploads always require a ",(0,l.jsx)(n.strong,{children:"postage stamp batch"}),"."]}),"\n",(0,l.jsxs)(n.li,{children:["Ultra-light nodes can download but ",(0,l.jsx)(n.strong,{children:"cannot upload"}),"."]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"upload--download-with-bee-js",children:"Upload & Download with bee-js"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"bee-js"})," library is the ",(0,l.jsx)(n.strong,{children:"official SDK for building Swarm-based applications"}),". It works in both ",(0,l.jsx)(n.strong,{children:"browser"})," and ",(0,l.jsx)(n.strong,{children:"Node.js"})," environments and ",(0,l.jsx)(n.strong,{children:"greatly simplifies development"})," compared with using the Bee HTTP API directly. It is the recommended method for developing applications on Swarm."]}),"\n",(0,l.jsxs)(n.p,{children:["Refer to the ",(0,l.jsxs)(n.a,{href:"https://bee-js.ethswarm.org/",children:[(0,l.jsx)(n.code,{children:"bee-js"})," documentation"]})," for more usage guides."]}),"\n",(0,l.jsxs)(n.admonition,{type:"tip",children:[(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Environment-specific methods:"})}),(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Browser-only:"})," ",(0,l.jsx)(n.a,{href:"https://bee-js.ethswarm.org/docs/api/classes/Bee/#uploadfiles",children:(0,l.jsx)(n.code,{children:"uploadFiles"})})," (multi-file via ",(0,l.jsx)(n.code,{children:"File[]"}),"/",(0,l.jsx)(n.code,{children:"FileList"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Node.js-only:"})," ",(0,l.jsx)(n.a,{href:"https://bee-js.ethswarm.org/docs/api/classes/Bee/#uploadfiles",children:(0,l.jsx)(n.code,{children:"uploadFilesFromDirectory"})})," (recursively reads local filesystem to upload multiple files in a directory using ",(0,l.jsx)(n.code,{children:"fs"}),"),"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:"Both:"})," ",(0,l.jsx)(n.a,{href:"https://bee-js.ethswarm.org/docs/api/classes/Bee/#uploadfile",children:(0,l.jsx)(n.code,{children:"uploadFile"})})," (with some environment specific usage), ",(0,l.jsx)(n.a,{href:"https://bee-js.ethswarm.org/docs/api/classes/Bee/#downloadfile",children:(0,l.jsx)(n.code,{children:"downloadFile"})})]}),"\n"]})]}),"\n",(0,l.jsx)(n.h3,{id:"single-file--nodejs",children:"Single file \u2014 Node.js"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Step-by-step Walkthrough:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Create a Bee client:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const bee = new Bee("http://localhost:1633")'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Buy storage (postage stamp batch) by specifying storage size and duration:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"const batchId = await bee.buyStorage(Size.fromGigabytes(1), Duration.fromDays(1))"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Read the file from disk:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const data = await readFile("./hello.txt")'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Upload bytes with filename & content type \u2192 get reference:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const { reference } = await bee.uploadFile(batchId, data, "hello.txt", { contentType: "text/plain" })'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Download the file by reference:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"const file = await bee.downloadFile(reference)"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Log the downloaded file\u2019s title and metadata:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"console.log(file.name)"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"console.log(file.contentType)"})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"console.log(file.data.toUtf8())"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Full example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'import { Bee, Size, Duration } from "@ethersphere/bee-js";\nimport { readFile } from "node:fs/promises";\n\n// 1) Connect to your Bee node HTTP API\nconst bee = new Bee("http://localhost:1633");\n\n// 2) Buy storage (postage stamp batch) for this session\nconst batchId = await bee.buyStorage(\n  Size.fromGigabytes(1),\n  Duration.fromDays(1)\n);\n\n// 3) Read the file from disk as bytes\nconst data = await readFile("./hello.txt");\n\n// 4) Upload the bytes with a filename and content type; capture the reference\nconst { reference } = await bee.uploadFile(batchId, data, "hello.txt", {\n  contentType: "text/plain",\n});\nconsole.log("Uploaded reference:", reference.toHex());\n\n// 5) Download the file back using the reference\nconst file = await bee.downloadFile(reference);\n\n// 6) Log the file\'s metadata and contents to the terminal\nconsole.log(file.name); // "hello.txt"\nconsole.log(file.contentType); // "text/plain"\nconsole.log(file.data.toUtf8()); // Prints file content\n'})}),"\n",(0,l.jsx)(n.h3,{id:"single-file--browser",children:"Single file \u2014 Browser"}),"\n",(0,l.jsx)(n.admonition,{type:"info",children:(0,l.jsxs)(n.p,{children:["When working with browsers you can use the ",(0,l.jsxs)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/File",children:[(0,l.jsx)(n.code,{children:"File"})," interface"]}),". The filename is taken from the ",(0,l.jsx)(n.code,{children:"File"})," object itself, but can be overwritten through the second argument of the ",(0,l.jsx)(n.code,{children:"uploadFile"})," function."]})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Walkthrough"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Initialize a Bee object using the API endpoint of a Bee node:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const bee = new Bee("http://localhost:1633")'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Buy storage and get postage stamp batch ID:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"const batchId = await bee.buyStorage(Size.fromGigabytes(1), Duration.fromDays(1))"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Create a ",(0,l.jsx)(n.code,{children:"File"})," object:"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const file = new File(["Hello Swarm!"], "hello.txt", { type: "text/plain" })'})}),"\n",(0,l.jsxs)(n.ol,{start:"4",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Use batch ID to upload \u2192 get reference:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"const { reference } = await bee.uploadFile(batchId, file)"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Download by reference:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"const downloaded = await bee.downloadFile(reference)"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Log the downloaded file\u2019s title and metadata:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'console.log(downloaded.name)   // "hello.txt"'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'console.log(file.contentType) // "text/plain"'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"console.log(downloaded.data.toUtf8()) // prints file content"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'import { Bee, Size, Duration } from "@ethersphere/bee-js";\n\n// 1) Connect to your Bee node HTTP API\nconst bee = new Bee("http://localhost:1633");\n\n// 2) Buy storage (postage stamp batch) for this session\nconst batchId = await bee.buyStorage(\n  Size.fromGigabytes(1),\n  Duration.fromDays(1)\n);\nconsole.log("Batch ID:", String(batchId));\n\n// 3) Upload a single file created in code\nconst file = new File(["Hello Swarm!"], "hello.txt", { type: "text/plain" });\nconst { reference } = await bee.uploadFile(batchId, file);\nconsole.log("Reference:", String(reference));\n\n// 4) Download and print name + contents\nconst downloaded = await bee.downloadFile(reference);\nconsole.log(downloaded.name); // "hello.txt"\nconsole.log(file.contentType); // "text/plain"\nconsole.log(downloaded.data.toUtf8()); // prints file content\n'})}),"\n",(0,l.jsx)(n.h3,{id:"multiple-files--browser",children:"Multiple files \u2014 Browser"}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"uploadFiles"})})," for multi-file upload in the browser. It accepts ",(0,l.jsx)(n.code,{children:"File[]"}),"/",(0,l.jsx)(n.code,{children:"FileList"}),". When using ",(0,l.jsx)(n.code,{children:'<input type="file" webkitdirectory multiple>'}),", each file\u2019s ",(0,l.jsx)(n.strong,{children:"relative path"})," is preserved. To download a specific file later, pass the ",(0,l.jsx)(n.strong,{children:"collection reference"})," plus the ",(0,l.jsx)(n.strong,{children:"same relative path"}),"."]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Initialize a Bee object using the API endpoint of a Bee node:\n",(0,l.jsx)(n.code,{children:'const bee = new Bee("http://localhost:1633")'})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Buy storage and get postage stamp batch ID:\n",(0,l.jsx)(n.code,{children:"const batchId = await bee.buyStorage(Size.fromGigabytes(1), Duration.fromDays(1))"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Create files for upload:"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'const files = [\n  new File(["<h1>Hello Swarm</h1>"], "index.html", { type: "text/html" }),\n  new File(["body{font-family:sans-serif}"], "assets/main.css", {\n    type: "text/css",\n  }),\n];\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"4",children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Upload multiple files (collection) \u2192 get collection reference:\n",(0,l.jsx)(n.code,{children:"const res = await bee.uploadFiles(batchId, files)"})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsxs)(n.p,{children:["Download files by relative paths:\n",(0,l.jsx)(n.code,{children:'const logo = await bee.downloadFile(res.reference, "images/logo.png")'})]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Log the downloaded file\u2019s title and contents:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'console.log(page.name)          // "index.html"'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"console.log(page.data.toUtf8()) // prints file content"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'import { Bee, Size, Duration } from "@ethersphere/bee-js";\n\n// 1. Initialize a Bee object\nconst bee = new Bee("http://localhost:1633");\n\n// 2. Buy storage and get batch ID\nconst batchId = await bee.buyStorage(\n  Size.fromGigabytes(1),\n  Duration.fromDays(1)\n);\nconsole.log("Batch ID:", String(batchId));\n\n// 3. Create files for upload\nconst files = [\n  new File(["<h1>Hello Swarm</h1>"], "index.html", { type: "text/html" }),\n  new File(["body{font-family:sans-serif}"], "assets/main.css", {\n    type: "text/css",\n  }),\n];\n\n//  4. Upload multiple files (collection) \u2192 get collection reference\nconst res = await bee.uploadFiles(batchId, files);\nconsole.log("Collection ref:", String(res.reference));\n\n// 5. Download files by relative path\nconst page = await bee.downloadFile(res.reference, "index.html");\nconsole.log(page.name); // "index.html"\nconsole.log(page.data.toUtf8()); // prints file content\n\nconst style = await bee.downloadFile(res.reference, "assets/main.css");\nconsole.log(style.name); // "main.css"\nconsole.log(style.data.toUtf8()); // prints file content\n'})}),"\n",(0,l.jsx)(n.h3,{id:"multiple-files--nodejs",children:"Multiple files \u2014 Node.js"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Step-by-step Walkthrough:"})}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Initialize a Bee object using the API endpoint of a Bee node:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const bee = new Bee("http://localhost:1633")'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Buy storage and get postage stamp batch ID:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"const batchId = await bee.buyStorage(Size.fromGigabytes(1), Duration.fromDays(1))"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Recursively upload a local directory \u2192 get collection reference:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const res = await bee.uploadFilesFromDirectory(batchId, "./site")'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Download one file by its relative path:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'const page = await bee.downloadFile(res.reference, "index.html")'})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Log the downloaded file name and contents:"}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:'console.log(page.name ?? "index.html")'})}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.code,{children:"console.log(page.data.toUtf8())"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsx)(n.strong,{children:"Full example:"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-js",children:'import { Bee, Size, Duration } from "@ethersphere/bee-js";\n\n// 1) Connect to your Bee node HTTP API\nconst bee = new Bee("http://localhost:1633");\n\n// 2) Buy storage (postage stamp batch)\nconst batchId = await bee.buyStorage(\n  Size.fromGigabytes(1),\n  Duration.fromDays(1)\n);\n\n// 3) Upload all files under ./files (relative paths preserved); get reference\nconst res = await bee.uploadFilesFromDirectory(batchId, "./files");\nconsole.log("Directory uploaded. Collection reference:", res.reference.toHex());\n\n// 4) Download files from the collection by original relative paths\nconst page = await bee.downloadFile(res.reference, "root.txt");\nconst stylesheet = await bee.downloadFile(\n  res.reference,\n  "subdirectory/example.txt"\n);\n\n// 5) Log the file name and contents to the terminal\nconsole.log(page.name); // "root.txt"\nconsole.log(page.data.toUtf8()); // prints file content\n\nconsole.log(stylesheet.name); // "example.txt"\nconsole.log(stylesheet.data.toUtf8()); // prints file content\n'})}),"\n",(0,l.jsx)(n.h2,{id:"upload--download-with-swarm-cli",children:"Upload & Download with Swarm CLI"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"swarm-cli"})," tool offers a convenient command-line interface for Bee node interaction. It's a convenient tool for node management or one-off uploads and downloads."]}),"\n",(0,l.jsxs)(n.p,{children:["Refer to ",(0,l.jsx)(n.a,{href:"https://github.com/ethersphere/swarm-cli/blob/master/README.md",children:"the official README"})," for a more complete usage guide."]}),"\n",(0,l.jsx)(n.p,{children:"Buy storage via an interactive prompt (capacity + TTL), then upload:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"swarm-cli stamp create\n"})}),"\n",(0,l.jsx)(n.p,{children:"Follow the interactive prompts:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'For swarm cli, use "stamp create", which looks like this:\n\nPS C:\\Users\\noahm> swarm-cli stamp create\nPlease provide the total capacity of the postage stamp batch\nThis represents the total size of data that can be uploaded\nExample: 1GB\n\nPlease provide the time-to-live (TTL) of the postage stamps\nDefines the duration after which the stamp will expire\nExample: 1d, 1w, 1month\n\nYou have provided the following parameters:\nCapacity: 1.074 GB\nTTL: 7 days\n\nCost: 0.6088166475825152 xBZZ\nAvailable: 10000.0000000000000000 xBZZ\nType: Immutable\n? Confirm the purchase Yes\n... Creating postage batch. This may take up to 5 minutes.\n'})}),"\n",(0,l.jsxs)(n.p,{children:["Once you have a valid stamp batch, you can find it using ",(0,l.jsx)(n.code,{children:"swarm-cli stamp list"})]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"swarm-cli stamp list\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"Stamp ID: 6dd0c4bbb6d62ba6c5fae3b000301c961ee584dd32846291821d789d7582ae36\nUsage: 0%\nCapacity (immutable): 2.380 GB remaining out of 2.380 GB\nTTL: A few seconds (2025-09-21)\n------------------------------------------------------------------------------------------------------------------------\nStamp ID: d13210952ec60b01a3c0027602743921736d6b277e9e70dd00d0d95fd878acbc\nUsage: 0%\nCapacity (immutable): 2.380 GB remaining out of 2.380 GB\nTTL: A few seconds (2025-09-21)\n"})}),"\n",(0,l.jsxs)(n.p,{children:["Use ",(0,l.jsx)(n.code,{children:"swarm-cli upload"})," along with a valid batch ID to upload a file:"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"swarm-cli upload test.txt --stamp <BATCH_ID>\n"})}),"\n",(0,l.jsx)(n.p,{children:"You can also simply use:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"swarm-cli upload <PATH_TO_FILE>\n"})}),"\n",(0,l.jsx)(n.p,{children:"And an interactive prompt will walk your through stamp selection and the rest of the upload."}),"\n",(0,l.jsx)(n.p,{children:"Upon upload, a Swarm reference hash will be returned which can then be used to download content:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"swarm-cli download <REFERENCE> ./output/\n"})}),"\n",(0,l.jsx)(n.h2,{id:"upload--download-with-the-bee-api-advanced",children:"Upload & Download with the Bee API (advanced)"}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.strong,{children:"Bee HTTP API"})," offers the ",(0,l.jsx)(n.strong,{children:"lowest-level access"})," to a Bee node. However, it is ",(0,l.jsx)(n.strong,{children:"more complex and difficult to use"})," than ",(0,l.jsx)(n.strong,{children:"bee-js"})," or ",(0,l.jsx)(n.strong,{children:"swarm-cli"})," because you must manage headers, content types, and postage parameters yourself. ",(0,l.jsx)(n.strong,{children:"Unless you specifically require raw HTTP control"}),", we ",(0,l.jsx)(n.strong,{children:"do not recommend"})," using the Bee API directly. Instead use ",(0,l.jsx)(n.strong,{children:"bee-js"})," for application development and ",(0,l.jsx)(n.strong,{children:"swarm-cli"})," for command-line interaction."]}),"\n",(0,l.jsxs)(n.p,{children:["Refer to the ",(0,l.jsx)(n.a,{href:"https://docs.ethswarm.org/api/",children:"Bee API reference specification"})," for detailed usage information."]}),"\n",(0,l.jsx)(n.p,{children:"The Bee API exposes three HTTP endpoints:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"/bzz"})})," \u2014 upload & download files/directories (most common)"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"/bytes"})})," \u2014 upload & download raw data"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.strong,{children:(0,l.jsx)(n.code,{children:"/chunks"})})," \u2014 upload & download individual chunks"]}),"\n"]}),"\n",(0,l.jsxs)(n.h4,{id:"upload-with-bzz",children:["Upload with ",(0,l.jsx)(n.strong,{children:"/bzz"})]}),"\n",(0,l.jsxs)(n.p,{children:["While both ",(0,l.jsx)(n.code,{children:"swarm-cli"})," and ",(0,l.jsx)(n.code,{children:"bee-js"})," allow for postage stamp batches to be purchased by specifying the storage duration and data size, the actual call to the Bee API requires an ",(0,l.jsx)(n.code,{children:"amount"})," and ",(0,l.jsx)(n.code,{children:"depth"})," parameters. The relationship between these parameters and the storage size and duration of the batch is complex. Therefore ",(0,l.jsx)(n.code,{children:"bee-js"})," and ",(0,l.jsx)(n.code,{children:"swarm-cli"})," (which allow batches to be purchased by data size/duration which are then converted to ",(0,l.jsx)(n.code,{children:"depth"}),"/",(0,l.jsx)(n.code,{children:"amount"}),") are strongly encouraged for newcomers to development on Swarm. ",(0,l.jsx)(n.a,{href:"/docs/develop/tools-and-features/buy-a-stamp-batch",children:"Learn more"}),"."]}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Buy a postage batch:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl -s -X POST http://localhost:1633/stamps/<amount>/<depth>\n"})}),"\n",(0,l.jsxs)(n.ol,{start:"2",children:["\n",(0,l.jsxs)(n.li,{children:["Upload a file with the returned ",(0,l.jsx)(n.code,{children:"batchID"}),":"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:'curl -X POST \\\n  -H "Swarm-Postage-Batch-Id: <BATCH_ID>" \\\n  -H "Content-Type: text/plain" \\\n  --data-binary "@test.txt" \\\n  http://localhost:1633/bzz\n'})}),"\n",(0,l.jsx)(n.p,{children:"Response:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-json",children:'{\n  "reference": "22cbb9cedca08ca8d50b0319a32016174ceb8fbaa452ca5f0a77b804109baa00"\n}\n'})}),"\n",(0,l.jsxs)(n.ol,{start:"3",children:["\n",(0,l.jsxs)(n.li,{children:["Download with ",(0,l.jsx)(n.code,{children:"/bzz"})]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:1633/bzz/<REFERENCE> -o output.txt\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);